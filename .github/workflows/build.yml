# This is a basic workflow to help you get started with Actions

name: .NET build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build:

    runs-on: ubuntu-latest
    
    env:
      Solution_Name: CoreCache.sln
      UnitTest_Project_Path: UnitTests
      IntegrationTests_Project_Path: IntegrationTests
      Pack_Project_Path: Core
      NET_SDK_VERSION: 6.0.101

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Echo RELEASE_VERSION
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}    
#      - name: Release Tag Updater   
#        uses: sersoft-gmbh/running-release-tags-action@v1
      - name: Echo Version
        run: echo ${{ github.ref_name }}   

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.101
          

          
      - name: Run Build
        run: dotnet build --configuration Release -p:PackageVersion=${{ github.ref }}

      - name: Run tests
        run: dotnet test --configuration=Release -p:Platform="Any CPU" --collect:"XPlat Code Coverage"
        
      - name: Publish Code Coverage UnitTest
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ${{ github.workspace }}/UnitTests/TestResults/**/coverage.cobertura.xml
          
      - name: Publish Code Coverage IntegrationTests
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ${{ github.workspace }}/IntegrationTests/TestResults/**/coverage.cobertura.xml
          
      - name: Pack
        run: dotnet pack -p:PackageVersion=0.5.${{ github.run_number }} --configuration=Release -o artifacts -p:symbolPackageFormat=snupkg --include-symbols

      - name: Store nupkg
        uses: actions/upload-artifact@v3
        with:
          name: Nuget packages
          path: artifacts
          
      - name: Push to nuget
        run: dotnet nuget push artifacts/CoreCache.nupkg --api-key ${{secrets.NUGET}} --source https://api.nuget.org/v3/index.json
